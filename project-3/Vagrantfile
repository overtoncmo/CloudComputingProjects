Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"   # Ubuntu 18.04 (use focal64 for 20.04)
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
     vb.gui = true
  #   # Customize the amount of memory on the VM:
     vb.memory = "2048"
  end

  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    apt-get install -y apache2
  SHELL

  config.vm.provision "shell", inline: <<-SHELL
     mkdir -p /home/vagrant/.ssh
     mkdir -p /home/vagrant/.ansible
     mkdir -p /home/vagrant/.config
     mkdir -p /home/vagrant/.config/openstack
  SHELL


  config.vm.provision "shell", inline: <<-SHELL
     yes | sudo apt-get install python3-pip
     python3 -m pip install --upgrade pip
     python3 -m pip install --upgrade setuptools
     python3 -m pip install --upgrade openstacksdk
     pip3 install openstacksdk
     python3 -m pip install software-properties-common
     #python3 -m pip uninstall ansible
     python3 -m pip install ansible
     python3 -m pip install kafka-python
     sudo ansible-galaxy collection install openstack.cloud
  SHELL
  config.vm.provision "shell", path: "bootstrap.sh"
  config.vm.provision "file", source: "/Users/charlie/Documents/CloudComputingCourse/ScaffoldingCode/project-3/db-server.properties", destination: "~/db-server.properties"
  config.vm.provision "file", source: "/Users/charlie/Documents/CloudComputingCourse/ScaffoldingCode/project-3/zk-server.properties", destination: "~/zk-server.properties"
  config.vm.provision "file", source: "/Users/charlie/Documents/CloudComputingCourse/ScaffoldingCode/project-3/zookeeper.properties", destination: "~/zookeeper.properties"
  config.vm.provision "file", source: "/Users/charlie/Documents/CloudComputingCourse/ScaffoldingCode/project-3/producer-json.py", destination: "~/producer-json.py"
  config.vm.provision "file", source: "/Users/charlie/Documents/CloudComputingCourse/ScaffoldingCode/project-3/consumer.py", destination: "~/consumer.py"
  config.vm.provision "file", source: "/Users/charlie/Documents/CloudComputingCourse/ScaffoldingCode/project-3/local.ini", destination: "~/local.ini"
  config.vm.provision "file", source: "/Users/charlie/Documents/CloudComputingCourse/ScaffoldingCode/project-3/GDP_per_capita.csv", destination: "~/GDP_per_capita.csv"
  config.vm.provision "file", source: "/Users/charlie/Desktop/cloud\ computing/ssh/cloud-computing.pem", destination: "~/.ssh/"
  config.vm.provision "file", source: "./ansible.cfg", destination: "/home/vagrant/.ansible.cfg"
  config.vm.provision "file",
    source: "./MyInventory",
    destination: "/tmp/MyInventory"
  config.vm.provision "shell",
    inline: "mv /tmp/MyInventory /home/vagrant/.ansible/MyInventory"
  config.vm.provision "file",
    source: "/Users/charlie/Documents/CloudComputingCourse/ScaffoldingCode/project-3/clouds.yaml",
    destination: "/tmp/clouds.yaml"
  config.vm.provision "shell",
    inline: "mv /tmp/clouds.yaml /home/vagrant/.config/openstack/clouds.yaml"

  config.vm.provision "ansible_local" do |ansible|
    ansible.playbook = "playbook_demo_master.yml"
    ansible.verbose = true
    ansible.install = true  # installs ansible (and hence python on VM)
    ansible.limit = "all"
    ansible.inventory_path = "MyInventory"  # inventory file
    # ansible.start_at_task = "Install Python3"
  end
end
